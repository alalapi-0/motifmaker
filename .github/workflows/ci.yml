name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: "📦 Checkout"
        uses: actions/checkout@v4

      - name: "🐍 Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: "📥 Install Python deps"
        run: |
          python -m pip install --upgrade pip
          # 中文注释：安装项目与开发依赖，pyproject 已声明运行/测试所需库。
          pip install -e ".[dev]"

      - name: "✅ Python lint & tests"
        run: |
          # 中文注释：运行 Ruff 与 Pytest，确保后端代码风格与单测通过。
          ruff --version
          ruff .
          pytest -q

      - name: "🟦 Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            web/package-lock.json
            desktop/package-lock.json

      - name: "🔧 Web lint & unit tests"
        working-directory: web
        run: |
          # 中文注释：安装前端依赖并运行 ESLint 与 Vitest。
          npm ci
          npm run lint
          npm run test

      - name: "🖥️ Desktop typecheck (optional)"
        if: ${{ hashFiles('desktop/tsconfig.json') != '' }}
        working-directory: desktop
        run: |
          # 中文注释：仅执行类型检查，不构建 Electron 安装包。
          npm ci || true
          if [ -f tsconfig.json ]; then npx tsc -p tsconfig.json --noEmit; fi
